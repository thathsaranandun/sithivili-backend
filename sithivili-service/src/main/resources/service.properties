# LOCAL SERVER
spring.datasource.url = jdbc:mysql://localhost:3306/sithivili?verifyServerCertificate=false&useSSL=true&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = root
server.port=8083

##LOCAL CLOUD SERVER
#spring.datasource.url = jdbc:mysql://34.80.4.174:3306/sithivili?useSSL=false
#spring.datasource.username = thathsara
#spring.datasource.password = thathsara123
#server.port=8080

## REMOTE MYSQL SERVER
#spring.datasource.url = jdbc:mysql://remotemysql.com:3306/VMGsMW5Ag2?useSSL=false
#spring.datasource.username = VMGsMW5Ag2
#spring.datasource.password = 78v4JAloFz
#server.port=8080

##GOOGLE CLOUD SERVER
#spring.datasource.url = jdbc:mysql://34.80.4.174:3306/sithivili?useSSL=false
#spring.datasource.username = thathsara
#spring.datasource.password = thathsara123
#server.port=8080

###GOOGLE CLOUD SERVER
#spring.cloud.gcp.sql.database-name=sithivili
#spring.cloud.gcp.sql.instance-connection-name=sithivili:asia-east1:sithivilidb
#spring.cloud.appId=sithivili
#spring.datasource.username = root
#spring.datasource.password = sithivili123


# Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.
spring.datasource.initialization-mode=always

#Bearer token for authorized API services - Bearer sithivilisbbebt

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#google cloud console
#app.deploy.projectId = sithivili

sithivili.email=skepseis.appdev@gmail.com

jwt.enabled = 1